{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","Mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","showAlert","document","getElementById","select","navigator","clipboard","writeText","newText","toUpperCase","toLowerCase","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.49ccce49.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n\treturn (\r\n\t\t<nav className={`navbar navbar-expand-lg navbar-${props.Mode} bg-${props.Mode}`}>\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t<ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\t\t\t\t\t\t{/* <li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n\t\t\t\t\t\t\t<a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t\t{/* <li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className=\"nav-link active\" to=\"/about\">About</Link>\r\n\t\t\t\t\t\t</li> */}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<div className={`form-check form-switch text-${props.Mode === 'light'?'dark':'light'}`}>\r\n\t\t\t\t\t\t<input className=\"form-check-input btn-dark\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Modes</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nNavbar.propTypes = {\r\n\ttitle: PropTypes.string,\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked \" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\", \"success\");\r\n    }\r\n    \r\n    const handleClrClick = () => {\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Box has been cleared\", \"success\");\r\n    }\r\n    \r\n    const handleOnChange = (event) => {\r\n        // console.log(\"Handle on change\");\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces has been removed\", \"success\");\r\n    }\r\n    \r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text has been copied\", \"success\");\r\n    }\r\n    const [text, setText] = useState('');\r\n    // setText(\"new text\");\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color: props.Mode==='dark'?'white':'black'}}>\r\n                <h2>{props.heading}</h2>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.Mode === 'dark'?'#202020':'white',color: props.Mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"4\"></textarea>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <button type=\"button\" className=\"btn btn-danger mx-2 btn-sm\" onClick={handleClrClick}>clear Text</button>\r\n                    <button type=\"button\" className=\"btn btn-warning mx-2 btn-sm\" onClick={handleCopy}>Copy Text</button>\r\n                    <button type=\"button\" className=\"btn btn-warning mx-2 btn-sm\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n                    <button type=\"button\" className=\"btn btn-warning mx-2 btn-sm\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n                    <button type=\"button\" className=\"btn btn-warning mx-2 btn-sm\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"container my-3\" style={{color: props.Mode==='dark'?'white':'black'}}>\r\n                <h4>Your text summary</h4>\r\n                <p><b>{text.split(\" \").length}</b> words and <b>{text.length}</b> characters</p>\r\n                <p><b>{0.008 * text.split(\" \").length}</b> Time to read</p>\r\n                <h4>Preview</h4>\r\n                <p><small>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</small></p>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )       \r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n// import {\n// \tBrowserRouter as Router,\n// \tSwitch,\n// \tRoute\n// } from \"react-router-dom\";\n\n\nfunction App() {\n\tconst [Mode, setMode] = useState('light');\n\tconst [alert, setAlert] = useState(null);\n\n\tconst showAlert = (message, type) => {\n\t\tsetAlert({\n\t\t\tmsg: message,\n\t\t\ttype: type\n\t\t})\n\t\tsetTimeout(() => {\n\t\t\tsetAlert(null);\n\t\t}, 2000)\n\t}\n\n\tconst toggleMode = () => {\n\t\tif (Mode === 'light') {\n\t\t\tsetMode('dark');\n\t\t\tdocument.body.style.backgroundColor = '#404040';\n\t\t\tshowAlert(\"Dark mode has been enabled\", \"success\");\n\t\t\tdocument.title = \"TextUtils - Dark Mode\";\n\t\t}\n\t\telse {\n\t\t\tsetMode('light');\n\t\t\tdocument.body.style.backgroundColor = 'white';\n\t\t\tshowAlert(\"Light mode has been enabled\", \"success\");\n\t\t\tdocument.title = \"TextUtils - Light Mode\";\n\t\t}\n\t}\n\treturn (\n\t\t<>\n\t\t\t{/* <Router> */}\n\t\t\t\t<Navbar title=\"TextUtils\" Mode={Mode} toggleMode={toggleMode} />\n\t\t\t\t<Alert alert={alert} />\n\t\t\t\t<div className=\"container my-3\">\n\t\t\t\t\t{/* <Switch> */}\n\t\t\t\t\t\t{/* <Route exact path=\"/about\">\n\t\t\t\t\t\t\t<About />\n\t\t\t\t\t\t</Route> */}\n\t\t\t\t\t\t{/* <Route exact path=\"/\"> */}\n\t\t\t\t\t\t\t<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" Mode={Mode} />\n\t\t\t\t\t\t{/* </Route> */}\n\t\t\t\t\t{/* </Switch> */}\n\t\t\t\t</div>\n\t\t\t{/* </Router> */}\n\t\t</>\n\t)\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}